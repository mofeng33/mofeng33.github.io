<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://mofeng33.github.io/atom.xml" rel="self" type="application/atom+xml" /><link href="http://mofeng33.github.io/" rel="alternate" type="text/html" /><updated>2023-08-29T14:31:14+08:00</updated><id>http://mofeng33.github.io/atom.xml</id><title type="html">墨風周刊</title><subtitle>这里记录每周值得分享的科技内容</subtitle><author><name>MoFeng</name><email>mofeng33@outlook.com</email></author><entry><title type="html">Markup: Syntax Highlighting</title><link href="http://mofeng33.github.io/markup/" rel="alternate" type="text/html" title="Markup: Syntax Highlighting" /><published>2023-08-29T00:00:00+08:00</published><updated>2017-03-09T23:27:01+08:00</updated><id>http://mofeng33.github.io/markup</id><content type="html" xml:base="http://mofeng33.github.io/markup/"><![CDATA[<p>Syntax highlighting is a feature that displays source code, in different colors and fonts according to the category of terms. This feature facilitates writing in a structured language such as a programming language or a markup language as both structures and syntax errors are visually distinct. Highlighting does not affect the meaning of the text itself; it is intended only for human readers.<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></p>

<h2 id="gfm-code-blocks">GFM Code Blocks</h2>

<p>GitHub Flavored Markdown <a href="https://help.github.com/articles/creating-and-highlighting-code-blocks/">fenced code blocks</a> are supported by default with Jekyll. You may need to update your <code class="language-plaintext highlighter-rouge">_config.yml</code> file to enable them if you’re using an older version.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">kramdown</span><span class="pi">:</span>
  <span class="na">input</span><span class="pi">:</span> <span class="s">GFM</span>
</code></pre></div></div>

<p>Here’s an example of a CSS code snippet written in GFM:</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">#container</span> <span class="p">{</span>
  <span class="nl">float</span><span class="p">:</span> <span class="nb">left</span><span class="p">;</span>
  <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span> <span class="m">-240px</span> <span class="m">0</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Yet another code snippet for demonstration purposes:</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="nn">Jekyll</span>
  <span class="k">class</span> <span class="nc">TagIndex</span> <span class="o">&lt;</span> <span class="no">Page</span>
    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">site</span><span class="p">,</span> <span class="n">base</span><span class="p">,</span> <span class="n">dir</span><span class="p">,</span> <span class="n">tag</span><span class="p">)</span>
      <span class="vi">@site</span> <span class="o">=</span> <span class="n">site</span>
      <span class="vi">@base</span> <span class="o">=</span> <span class="n">base</span>
      <span class="vi">@dir</span> <span class="o">=</span> <span class="n">dir</span>
      <span class="vi">@name</span> <span class="o">=</span> <span class="s1">'index.html'</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">process</span><span class="p">(</span><span class="vi">@name</span><span class="p">)</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">read_yaml</span><span class="p">(</span><span class="no">File</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">base</span><span class="p">,</span> <span class="s1">'_layouts'</span><span class="p">),</span> <span class="s1">'tag_index.html'</span><span class="p">)</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'tag'</span><span class="p">]</span> <span class="o">=</span> <span class="n">tag</span>
      <span class="n">tag_title_prefix</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">config</span><span class="p">[</span><span class="s1">'tag_title_prefix'</span><span class="p">]</span> <span class="o">||</span> <span class="s1">'Tagged: '</span>
      <span class="n">tag_title_suffix</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">config</span><span class="p">[</span><span class="s1">'tag_title_suffix'</span><span class="p">]</span> <span class="o">||</span> <span class="s1">'&amp;#8211;'</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'title'</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"</span><span class="si">#{</span><span class="n">tag_title_prefix</span><span class="si">}#{</span><span class="n">tag</span><span class="si">}</span><span class="s2">"</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'description'</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"An archive of posts tagged </span><span class="si">#{</span><span class="n">tag</span><span class="si">}</span><span class="s2">."</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<h2 id="jekyll-highlight-liquid-tag">Jekyll Highlight Liquid Tag</h2>

<p>Jekyll also has built-in support for syntax highlighting of code snippets using either Rouge or Pygments, using a dedicated Liquid tag as follows:</p>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">highlight</span><span class="w"> </span><span class="nv">scss</span><span class="w"> </span><span class="cp">%}</span>
.highlight {
  margin: 0;
  padding: 1em;
  font-family: $monospace;
  font-size: $type-size-7;
  line-height: 1.8;
}
<span class="cp">{%</span><span class="w"> </span><span class="nt">endhighlight</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div>

<p>And the output will look like this:</p>

<figure class="highlight"><pre><code class="language-scss" data-lang="scss"><span class="nc">.highlight</span> <span class="p">{</span>
  <span class="nl">margin</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">padding</span><span class="p">:</span> <span class="m">1em</span><span class="p">;</span>
  <span class="nl">font-family</span><span class="p">:</span> <span class="nv">$monospace</span><span class="p">;</span>
  <span class="nl">font-size</span><span class="p">:</span> <span class="nv">$type-size-7</span><span class="p">;</span>
  <span class="nl">line-height</span><span class="p">:</span> <span class="m">1</span><span class="mi">.8</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<p>Here’s an example of a code snippet using the Liquid tag and <code class="language-plaintext highlighter-rouge">linenos</code> enabled.</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="nt">&lt;nav</span> <span class="na">class=</span><span class="s">"pagination"</span> <span class="na">role=</span><span class="s">"navigation"</span><span class="nt">&gt;</span>
  {% if page.previous %}
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ site.url }}{{ page.previous.url }}"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">title=</span><span class="s">"{{ page.previous.title }}"</span><span class="nt">&gt;</span>Previous article<span class="nt">&lt;/a&gt;</span>
  {% endif %}
  {% if page.next %}
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ site.url }}{{ page.next.url }}"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">title=</span><span class="s">"{{ page.next.title }}"</span><span class="nt">&gt;</span>Next article<span class="nt">&lt;/a&gt;</span>
  {% endif %}
<span class="nt">&lt;/nav&gt;</span><span class="c">&lt;!-- /.pagination --&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="code-blocks-in-lists">Code Blocks in Lists</h2>

<p>Indentation matters. Be sure the indent of the code block aligns with the first non-space character after the list item marker (e.g., <code class="language-plaintext highlighter-rouge">1.</code>). Usually this will mean indenting 3 spaces instead of 4.</p>

<ol>
  <li>Do step 1.</li>
  <li>
    <p>Now do this:</p>

    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span>
</code></pre></div>    </div>
  </li>
  <li>Now you can do this.</li>
</ol>

<h2 id="github-gist-embed">GitHub Gist Embed</h2>

<p>GitHub Gist embeds can also be used:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://gist.github.com/mmistakes/77c68fbb07731a456805a7b473f47841.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<p>Which outputs as:</p>

<script src="https://gist.github.com/mmistakes/77c68fbb07731a456805a7b473f47841.js"></script>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><a href="http://en.wikipedia.org/wiki/Syntax_highlighting">http://en.wikipedia.org/wiki/Syntax_highlighting</a> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>MoFeng</name><email>mofeng33@outlook.com</email></author><category term="code" /><category term="syntax highlighting" /><summary type="html"><![CDATA[Post displaying the various ways one can highlight code blocks with Jekyll. Some options include standard Markdown, GitHub Flavored Markdown, and Jekyll's `{% highlight %}` tag.]]></summary></entry><entry><title type="html">使用Github+Jekyll搭建免费的博客</title><link href="http://mofeng33.github.io/skills/how-to-deploy-a-blog-for-free/" rel="alternate" type="text/html" title="使用Github+Jekyll搭建免费的博客" /><published>2023-08-17T14:23:02+08:00</published><updated>2023-08-17T14:23:02+08:00</updated><id>http://mofeng33.github.io/skills/how-to-deploy-a-blog-for-free</id><content type="html" xml:base="http://mofeng33.github.io/skills/how-to-deploy-a-blog-for-free/"><![CDATA[<blockquote>
  <p>实现原理：Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过一个转换器（如 Markdown）和我们的 Liquid 渲染器转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。</p>
</blockquote>

<p>以下是一些基本步骤：</p>

<h3 id="1创建一个github账号">1.创建一个Github账号</h3>
<p>请先在<a href="https://github.com/">Github</a>上注册一个账号。</p>

<h3 id="2安装github-desktop">2.安装Github Desktop</h3>
<p>在本地电脑上安装Github Desktop,<a href="https://desktop.github.com/">下载地址</a></p>

<h3 id="3在github上创建一个新的仓库">3.在Github上创建一个新的仓库</h3>
<p>登陆到GitHub，点击右上角的“+”图标，选择“New Repository”来创建一个新的仓库。
以你的Github用户名给这个新仓库命名，格式为”username.github.io”，如你的用户名为luby，则仓库名应该为luby.github.io
这也是你的网站的域名，在部署完毕后可直接访问。</p>

<h3 id="4克隆仓库到本地">4.克隆仓库到本地</h3>
<p>打开终端，使用’git clone https://github.com/username/username.github.io.git’ (注：请将username替换成你的Github用户名) 将你的新仓库下载到本地。</p>

<h3 id="5安装jekyll静态网站生成器">5.安装Jekyll静态网站生成器</h3>
<p>在终端中，进入到刚才克隆下来的仓库文件夹，然后运行’gem install jekyll’安装Jekyll及其依赖。</p>

<h3 id="6创建jekyll网站">6.创建Jekyll网站</h3>
<p>使用Jekyll命令’Jekyll new .’在当前目录创建一个基本的Jekyll网站。
<a href="https://jekyllrb.com/">Jekyll文档请参考</a> <a href="https://jekyllcn.com/">Jekyll中文版文档</a></p>

<h3 id="7本地预览">7.本地预览</h3>
<p>在终端中运行’bundle exec jekyll serve’来预览你的网站，地址通常是’http://mofeng33.github.io或http://127.0.0.1:4000/’</p>

<h3 id="8提交变更并推送到github">8.提交变更并推送到Github</h3>
<p>当编辑完网站内容后，将’_site’目录下的文件推送到到Github。推送完毕后，就可以直接通过https://username.github.io访问你的网站。</p>

<h2 id="jekyll也有许多丰富的主题以下为官方推荐的几个主题站">Jekyll也有许多丰富的主题，以下为官方推荐的几个主题站</h2>
<ul>
  <li><a href="https://github.com/topics/jekyll-theme">Github上的模板</a></li>
  <li><a href="https://jamstackthemes.dev/ssg/jekyll/">jamstackthems.dev</a></li>
  <li><a href="http://jekyllthemes.org/">jekyllthemes.org</a></li>
  <li><a href="https://jekyllthemes.io/">jekyllthemes.io</a></li>
  <li><a href="https://jekyll-themes.com/">jekyll-themes.com</a></li>
</ul>]]></content><author><name>MoFeng</name><email>mofeng33@outlook.com</email></author><category term="skills" /><category term="website" /><category term="jekyll" /><summary type="html"><![CDATA[实现原理：Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过一个转换器（如 Markdown）和我们的 Liquid 渲染器转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。]]></summary></entry></feed>